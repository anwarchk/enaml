box: golang
build:
  steps:
    - setup-go-workspace
    #- wercker/golint:
    #    exclude: "^vendor\\|enaml"

    # Gets the dependencies
    - script:
        name: go get
        code: |
          cd $WERCKER_SOURCE_DIR
          go version
          go get github.com/Masterminds/glide
          export PATH=$WERCKER_SOURCE_DIR/bin:$PATH
          glide install

    # Test the project
    - script:
        name: go test
        code: |
          go test $(glide novendor) -v -cover -race

    - script:
        name: set release id variable for version
        code: |
          go get github.com/xchapter7x/versioning
          export WERCKER_GITHUB_CREATE_RELEASE_ID=`versioning bump_patch`

    - script:
        name: compile for all platforms
        code: |
          GOOS=darwin go build -o enaml-osx -ldflags "-X main.Version=${WERCKER_GITHUB_CREATE_RELEASE_ID}-`git rev-parse HEAD | cut -c1-6`" cmd/enaml/main.go
          GOOS=linux go build -o enaml-linux -ldflags "-X main.Version=${WERCKER_GITHUB_CREATE_RELEASE_ID}-`git rev-parse HEAD | cut -c1-6`" cmd/enaml/main.go
          GOOS=windows go build -o enaml-win -ldflags "-X main.Version=${WERCKER_GITHUB_CREATE_RELEASE_ID}-`git rev-parse HEAD | cut -c1-6`" cmd/enaml/main.go

    - script:
        name: add repo to artifact
        code: |
          cp -R ./ ${WERCKER_OUTPUT_DIR}

publish-release:
  steps:
    - script:
        name: install-packages
        code: |
          sudo apt-get install -y openssh-client wget
          ls -la
          pwd
          echo ${WERCKER_OUTPUT_DIR}
          ls -la ${WERCKER_OUTPUT_DIR}

    - wercker/add-ssh-key@1.0.2:
        keyname: PCF_GITHUB_KEY

    - wercker/add-to-known_hosts@1.4.0:
        hostname: github.com
        fingerprint: 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48

    - script:
        name: set release id variable for version
        code: |
          go get github.com/xchapter7x/versioning
          export WERCKER_GITHUB_CREATE_RELEASE_ID=`versioning ${VERSION_COMMAND}`

    - github-create-release:
        token: $GITHUB_TOKEN
        tag: $WERCKER_GITHUB_CREATE_RELEASE_ID
        title: CFOPS $WERCKER_GITHUB_CREATE_RELEASE_ID
        draft: false 
        prerelease: ${IS_PRE_RELEASE} 

    - github-upload-asset:
        token: $GITHUB_TOKEN
        file: enaml-osx 
        release_id: $WERCKER_GITHUB_CREATE_RELEASE_ID
        content-type: application/x-gzip

    - github-upload-asset:
        token: $GITHUB_TOKEN
        file: enaml-win 
        release_id: $WERCKER_GITHUB_CREATE_RELEASE_ID
        content-type: application/x-gzip

    - github-upload-asset:
        token: $GITHUB_TOKEN
        file: enaml-linux 
        release_id: $WERCKER_GITHUB_CREATE_RELEASE_ID
        content-type: application/x-gzip

deploy-pre-release:
  steps:
    - script:
        name: install-packages
        code: |
          sudo apt-get install -y openssh-client wget
          ls -la
          pwd
          echo ${WERCKER_OUTPUT_DIR}
          ls -la ${WERCKER_OUTPUT_DIR}

    - wercker/add-ssh-key@1.0.2:
        keyname: PCF_GITHUB_KEY

    - wercker/add-to-known_hosts@1.4.0:
        hostname: github.com
        fingerprint: 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48

    - script:
        name: set release id variable for version
        code: |
          go get github.com/xchapter7x/versioning
          export WERCKER_GITHUB_CREATE_RELEASE_ID=`versioning bump_patch`-`git rev-parse HEAD | cut -c1-6`

    - github-create-release:
        token: $GITHUB_TOKEN
        tag: $WERCKER_GITHUB_CREATE_RELEASE_ID
        title: CFOPS $WERCKER_GITHUB_CREATE_RELEASE_ID
        draft: true 
        prerelease: ${IS_PRE_RELEASE} 

    - github-upload-asset:
        token: $GITHUB_TOKEN
        file: enaml-osx 
        release_id: $WERCKER_GITHUB_CREATE_RELEASE_ID
        content-type: application/x-gzip

    - github-upload-asset:
        token: $GITHUB_TOKEN
        file: enaml-win 
        release_id: $WERCKER_GITHUB_CREATE_RELEASE_ID
        content-type: application/x-gzip

    - github-upload-asset:
        token: $GITHUB_TOKEN
        file: enaml-linux 
        release_id: $WERCKER_GITHUB_CREATE_RELEASE_ID
        content-type: application/x-gzip
